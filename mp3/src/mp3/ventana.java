/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mp3;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Image;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PERSONAL
 */
public class ventana extends javax.swing.JFrame {

    /**
     * Creates new form ventana
     */
    private String aux[];
    private String matriz[][];
    private reproductor mi_reproductor = new reproductor();
    private boolean mus = false;
    private int cont = 0;
    private float volumen = 0;
    private int fila = 1;
    private int fila1 = 0;
    private Timer tiempo ;
    private TimerTask task;
    private int speed = 1000;
    private int frame = 0;
    private File arch;
    //private JTable ta=new JTable();
    

    public ventana() throws FileNotFoundException {
        int cont = 0;
        initComponents();
        //imagen de fondo
        /*
        fondo pnlFondo = new fondo();
        pnlFondo.setjFramePadre(this);
        this.add(pnlFondo, BorderLayout.CENTER);
        this.pack();
        System.out.println("ancho: "+this.getWidth()+" alto: "+this.getHeight());
        */
        
        //this.jLabel2.setSize(this.getWidth(), this.getHeight());
       // fondo p=new fondo();
        //this.add(p);
        
        conexion n = new conexion();
        String[] columnNames = { "id","Nombre", "Artista"};
        //String[] columnNames1 = {"Nombre", "Artista"};
        
        if (n.crearConexion()) {
            System.out.println("conexion creada");
            n.accionpsql("select id,nombre,artista from musica");
            n.rconsulta();

            aux = n.GetDatosBD().toArray(new String[n.GetDatosBD().size()]);
            int fila = aux.length / n.GetN_columnas();
            int column = n.GetN_columnas();
            matriz = new String[fila][column];

            for (int f = 0; f < matriz.length; f++) {
                for (int c = 0; c < matriz[f].length; c++) {
                    matriz[f][c] = aux[cont];
                    cont++;
                }
            }
            n.limpiard();

            DefaultTableModel dtm = new DefaultTableModel(matriz, columnNames);

            this.tabla.setModel(dtm);
            //selecciona la primera cancion de la lista por defecto
            tabla.changeSelection(0, 0, false, true);
            //crea la imagen y la mustra en el jlabel
            ImageIcon fot = new ImageIcon(new File("").getAbsolutePath() + "\\list\\1.jpg");
            Icon icono = new ImageIcon(fot.getImage().getScaledInstance(foto1.getWidth(), foto1.getHeight(), Image.SCALE_DEFAULT));
            foto1.setIcon(icono);
            //this.repaint();
        } else {
            System.out.println("error");
        }

        
        ListSelectionModel lsm = this.tabla.getSelectionModel();
        //es un vento para que cada vez que escoja una cancion muestre el album del mismo
        lsm.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                //crea un entero con la fila seleccionada
                int g = tabla.getSelectedRow();
                //creamos una imagen y le enviamos por parametro la ruta
                ImageIcon fot = new ImageIcon(new File("").getAbsolutePath() + "\\list\\" + tabla.getValueAt(g, 0) + ".jpg");
                // le damos la dimecion a la imagen
                Icon icono = new ImageIcon(fot.getImage().getScaledInstance(foto1.getWidth(), foto1.getHeight(), Image.SCALE_DEFAULT));
                //se la aÃ±adimos al jlabel
                foto1.setIcon(icono);
                //identifica que cancion esta reproduciendo
                fila = tabla.getSelectedRow() + 1;

            }
        });
        jSlider1.setEnabled(false);
        
        //this.getContentPane().setBackground(Color.BLACK);
        //foto.setIcon(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        foto1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        play = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("MP3(MUISC)");
        setBackground(new java.awt.Color(0, 0, 0));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "null", "null", "null"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabla);

        foto1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3/forward-jogador-botao_318-10019 - copia.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3/boton-de-control-del-reproductor-de-musica_318-43326.jpg"))); // NOI18N
        play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3/forward-jogador-botao_318-10019.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mp3/descarga.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jSlider1.setForeground(new java.awt.Color(204, 204, 204));
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setValue(100);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel1.setText("100%");

        jSlider2.setValue(0);
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });
        jSlider2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSlider2MouseClicked(evt);
            }
        });
        jSlider2.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                jSlider2CaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel4.setText("0:00/0:00");

        jLabel2.setText(" ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(69, 69, 69)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(foto1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(154, 154, 154)
                                .addComponent(jLabel4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(68, 68, 68)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(foto1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)))
                .addGap(10, 10, 10)
                .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(play, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(55, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addGap(29, 29, 29))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //volumen
        jSlider1.setEnabled(true);
        //detiene la cancion antes de ir a la anterior
        try {
            mi_reproductor.Stop();
            cont = 0;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "error.");
        }
        
        //cuanquier posicion diferente a la primera, reproduce la cancion anterior
        if (fila != 1) {
            try {
                fila -= 1;
                mi_reproductor.AbrirFichero(new File("").getAbsolutePath() + "\\list\\" + tabla.getValueAt(fila - 1, 0) + ".mp3");
                mi_reproductor.Play();
                this.mus = true;
                cont = 1;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al abrir el archivo.");
            }
        
        //si esta en la primera cancion reproduciendo, 
        //no existe una cancion anterior entonces se va a reproducir la ultima cancion
        } else if (fila == 1) {
            try {
                mi_reproductor.AbrirFichero(new File("").getAbsolutePath() + "\\list\\" + tabla.getValueAt(tabla.getRowCount() - 1, 0) + ".mp3");
                mi_reproductor.Play();
                this.mus = true;
                cont = 1;
                fila = tabla.getRowCount();
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al abrir el archivo.");
            }

        }
        jSlider2.setMaximum((int) mi_reproductor.getBytes()); 
        fila1 = 1;
    }//GEN-LAST:event_jButton1ActionPerformed

    
    
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jSlider1.setEnabled(false);
        if (this.mus == true) {
            try {
                mi_reproductor.Stop();
                cont = 0;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al detener la cancion");
            }
        } else {
            JOptionPane.showMessageDialog(null, "no hay cancion para detener.");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    //detiene la animacion
    public void stopAnimation() {
        tiempo.cancel();
        task.cancel();
    }
    
    
    public void startAnimation() {

        tiempo = new Timer();
        task = new TimerTask() {
            @Override
            public void run() {
                int act=(int) mi_reproductor.get_duracionActual();
                int total=(int) mi_reproductor.get_duracionTotal();
                //calculamos el tiempo de la animacion por 100%
                int frame = (int) Math.round((act * 100)/total);
                //cuando ambos sean iguales quiere decir que el video a alcanzado el final de la reproduccion
                if(act == total){
                    //STOP();
                    stopAnimation();
                }
                else // sino
                {
                    // se actualiza el nuevo valor del Slider
                    jSlider2.setMaximum(total);
                    jSlider2.setValue(act);
                    //double x=total/(3*60);
                    //System.out.println("minutos: "+x);
                    jLabel4.setText(prog(act, total));
                    //jTextPane1.setText("Reproduciendo " + reproductor.getCancionActual().toString());

                    //Porcentaja de reproduccion
                     System.out.println("Tiempo de reproduccion: " + frame + "% de 100%");
                }
               }
        };
        //se inicia la animacion
        tiempo.schedule(task,0,speed);
    }
    
    public String prog(int act, int total){

        int mins=0;
        int segs=act;
        if(act>59 && act<=119){
            mins=1;
            segs=segs-60;
        }
        if(act>119 && act<=179){
            mins=2;
            segs=segs-120;
        }
        if(act>179 && act<=239){
            mins=3;
            segs=segs-180;
        }
        if(act>239 && act<=299){
            mins=4;
            segs=segs-240;
        }
        if(act>299 && act<=359){
            mins=5;
            segs=segs-300;
        }
        if(act>359 && act<=419){
            mins=6;
            segs=segs-360;
        }
        if(act>419 && act<=479){
            mins=7;
            segs=segs-420;
        }
        if(act>479 && act<=539){
            mins=8;
            segs=segs-480;
        }
        if(act>539 && act<=599){
            mins=9;
            segs=segs-540;
        }
        if(act>599 && act<=659){
            mins=10;
            segs=segs-600;
        }

        if(segs<10){
            return String.valueOf(mins) + ":0" + String.valueOf(segs) + "/" + total(total);
        }
        else return String.valueOf(mins) + ":" + String.valueOf(segs) + "/" + total(total);

    }
    public String total(int t){

        String tot="0:00";
        if(t<10){
            tot="0:0"+String.valueOf(t);
        }

        if(t<59){
            tot="0:"+String.valueOf(t);
        }

        if(t>59 && t<=119){
            t=t-60;
            if(t<10){
            tot="1:0"+String.valueOf(t);}
            else{
            tot="1:"+String.valueOf(t);}
        }
        if(t>119 && t<=179){
            t=t-120;
            if(t<10){
            tot="2:0"+String.valueOf(t);}
            else{
            tot="2:"+String.valueOf(t);}
        }
        if(t>179 && t<=239){
            t=t-180;
            if(t<10){
            tot="3:0"+String.valueOf(t);}
            else{
            tot="3:"+String.valueOf(t);}
        }
        if(t>239 && t<=299){
            t=t-240;
            if(t<10){
            tot="4:0"+String.valueOf(t);}
            else{
            tot="4:"+String.valueOf(t);}
        }
        if(t>299 && t<=359){
            t=t-300;
            if(t<10){
            tot="5:0"+String.valueOf(t);}
            else{
            tot="5:"+String.valueOf(t);}
        }
        if(t>359 && t<=419){
            t=t-360;
            if(t<10){
            tot="6:0"+String.valueOf(t);}
            else{
            tot="6:"+String.valueOf(t);}
        }
        if(t>419 && t<=479){
            t=t-420;
            if(t<10){
            tot="7:0"+String.valueOf(t);}
            else{
            tot="7:"+String.valueOf(t);}
        }
        return tot;

    }
    
    
    
    private void playActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playActionPerformed
        //this.row=this.tabla.getSelectedRow();
        //this.fila=row+1;
        jSlider1.setEnabled(true);
        // la variable cont es para saber si un archivo fue abierto 
        switch (cont) {
            case 0:
                try {
                    //abrimos el fichero enviandole la ruta de la cancion sabiendo que el nombre del archivo es el id en la base de datos
                    mi_reproductor.AbrirFichero(new File("").getAbsolutePath() + "\\list\\" + tabla.getValueAt(fila - 1, 0) + ".mp3");
                    //reoproduce la cancion
                    mi_reproductor.Play();
                    //mus es para saber si la cancion esta reproduciendo
                    this.mus = true;
                    //cont es para saber si la cancion esta reproduciendo
                    cont = 1;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "error al abrir el archivo.");
                }
                break;
            case 1:
                try {
                    //si esta reproduciendo y le da click entonces pausa la cancion
                    mi_reproductor.Pausa();
                    //mus dice que la cancion no esta reproduciendo
                    this.mus = false;
                    //cont en dos me dice que la cancion esta pausada
                    cont = 2;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "error al pausa el archivo.");
                }
                break;
            case 2:
                try {
                    //como ya esta pausada y le dan clik sobre el boton entonces pone a reproducir la cancio
                    mi_reproductor.Continuar();
                    //mus es para saber si la cancion esta reproduciendo
                    this.mus = true;
                    //cont en uno para que lo pause cuando le den click
                    cont = 1;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, "error al continuar la reproducion.");
                }
                break;
            default:
                break;
        }
        
        startAnimation();
        /*try {
            this.mi_reproductor.setVolumen(volumen);
        } catch (BasicPlayerException ex) {
            JOptionPane.showMessageDialog(null, "error al subir el volumen.");
        }*/


    }//GEN-LAST:event_playActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        //el jSlider es para volumen
        jSlider1.setEnabled(true);
        //esto es para parar la cancion antes de cambiarla
        try {
            mi_reproductor.Stop();
            cont = 0;
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "error al detener la cancion");
        }
        //primea validacion
        //si la cancion que esta reproduciendo es la ultima en la fila entonces se va a reproducir la primera de la tabla
        if (fila == tabla.getRowCount()) {
            try {
                mi_reproductor.AbrirFichero(new File("").getAbsolutePath() + "\\list\\" + tabla.getValueAt(0, 0) + ".mp3");
                mi_reproductor.Play();
                this.mus = true;
                cont = 1;
                fila = 1;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al abrir el archivo.");
            }
            //segunda posibilida es que es que no es este en la ultima posicion
            //entonces reproduce la siguiente cancion
        } else {
            try {
                mi_reproductor.AbrirFichero(new File("").getAbsolutePath() + "\\list\\" + tabla.getValueAt(fila, 0) + ".mp3");
                mi_reproductor.Play();
                this.mus = true;
                cont = 1;
                fila += 1;
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al abrir el archivo.");
            }

        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        //mus es para saber si hay canciones reproduciendo
        if (this.mus == true) {
            jSlider1.setEnabled(true);
            try {
                //se obtiene el valor de jslider u se divide en 130 y este es el valor del volumen
                this.volumen=(float) ((double) jSlider1.getValue() / 130);
                //le enviamos el valor del volumen
                this.mi_reproductor.setVolumen(volumen);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "error al subir volumen.");
            }
        }else
            jSlider1.setEnabled(false);

    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider2MouseClicked
        int pos = jSlider2.getValue();
        mi_reproductor.adelantar(pos);
    }//GEN-LAST:event_jSlider2MouseClicked

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        
    }//GEN-LAST:event_jSlider2StateChanged

    private void jSlider2CaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jSlider2CaretPositionChanged
        
    }//GEN-LAST:event_jSlider2CaretPositionChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ventana().setVisible(true);
                } catch (FileNotFoundException ex) {
                    System.out.println("error");
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel foto1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JButton play;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables

}
